extends KinematicBody2D
# Indicates an upward direction in Godot's 2D coordinate system
const UP = Vector2(0,-1)
const GRAVITY = 20
const MAXFALLSPEED = 200  
const MAXSPEED = 80 
const JUMPFORCE= 300
const ACCEL = 10
# Blank Vector2; can manipulate Kinematic Body 2d movements with code on an x and y axis 
var motion = Vector2()
var facing_right = true 
func _ready():
	pass # Replace with function body.

# _Phsics_process(delta): called during the physics processing step of the main loop. Physics processing means that the frame rate is synced to the physics 
func _physics_process(delta): 
	
	# += means to add a value of something to itself per Delta time tick, in other words i am using this function to constantly make gravity to pull the player down.
	motion.y += GRAVITY
	if motion.y > MAXFALLSPEED:
		motion.y = MAXFALLSPEED 
	if facing_right == true:
		$Sprite.scale.x = 1
	else: 
		$Sprite.scale.x = -1
	# This clamp fuction limits our motion.to from -80 to 80
	motion.x = clamp(motion.x,-MAXSPEED,MAXSPEED)
#First if statement that will handle user inputs 
#input for the character going right
	if Input.is_action_pressed("right"):
		motion.x += ACCEL
		facing_right = true 
		$AnimationPlayer.play("running")
#input for the character going left
	elif Input.is_action_pressed("left"):
		motion.x -= ACCEL
		facing_right = false 
		$AnimationPlayer.play("running")
	else:
		motion.x = lerp(motion.x,0,0.2)
		$AnimationPlayer.play("Idle")
	if is_on_floor():
		if Input.is_action_just_pressed("jump"):
			motion.y = -JUMPFORCE
	if Input.is_action_pressed("attack"):
		$AnimationPlayer.play("attacking")

			 
	if !is_on_floor():
		if motion.y < 0:
			$AnimationPlayer.play("jumping")
		elif motion.y >0:
			$AnimationPlayer.play("Falling")
		# The actual part of the code that makes the player slide
	motion = move_and_slide(motion,UP)
